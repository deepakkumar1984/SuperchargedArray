//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.ArrayExtension.Accelerated.Kernels {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class CLCode {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CLCode() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.ArrayExtension.Accelerated.Kernels.CLCode", typeof(CLCode).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to __kernel void ndarr_add_float(global float *a, global float *b, global float *r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = a[i] + b[i];
        ///}
        ///
        ///__kernel void ndarr_add_double(global double *a, global double *b, global double *r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = a[i] + b[i];
        ///}
        ///
        ///__kernel void ndarr_sub_float(global float *a, global float *b, global float *r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = a[i] - b[i];
        ///}
        ///
        ///__kernel void ndarr_sub_double(global double *a, global double * [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Arithmetic {
            get {
                return ResourceManager.GetString("Arithmetic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to __kernel void ndarr_fill_float(global float *x, float value)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	x[i] = value;
        ///}
        ///
        ///__kernel void ndarr_gt_float(global float *a, global float *b, global float *r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	if (a[i] &gt; b[i])
        ///		r[i] = 1;
        ///	else
        ///		r[i] = 0;
        ///}
        ///
        ///__kernel void ndarr_ge_float(global float* a, global float* b, global float* r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	if (a[i] &gt;= b[i])
        ///		r[i] = 1;
        ///	else
        ///		r[i] = 0;
        ///}
        ///
        ///__kernel void ndarr_lt_float(global [rest of string was truncated]&quot;;.
        /// </summary>
        public static string General {
            get {
                return ResourceManager.GetString("General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to __kernel void ndarr_exp_float(global float* x, global float* r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = exp(x[i]);
        ///}
        ///
        ///__kernel void ndarr_log_float(global float* x, global float* r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = log(x[i]);
        ///}
        ///
        ///__kernel void ndarr_log1p_float(global float* x, global float* r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = log1p(x[i]);
        ///}
        ///
        ///__kernel void ndarr_log10_float(global float* x, global float* r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = log10(x [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LogExpPow {
            get {
                return ResourceManager.GetString("LogExpPow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to __kernel void ndarr_floor_float(global float* x, global float* r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = floor(x[i]);
        ///}
        ///
        ///__kernel void ndarr_ceil_float(global float* x, global float* r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = ceil(x[i]);
        ///}
        ///
        ///__kernel void ndarr_round_float(global float* x, global float* r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = round(x[i]);
        ///}
        ///
        ///__kernel void ndarr_trunc_float(global float* x, global float* r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = t [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Rounding {
            get {
                return ResourceManager.GetString("Rounding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to __kernel void ndarr_sin_float(global float *x, global float *r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = sin(x[i]);
        ///}
        ///
        ///__kernel void ndarr_cos_float(global float *x, global float *r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = cos(x[i]);
        ///}
        ///
        ///__kernel void ndarr_tan_float(global float *x, global float *r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = tan(x[i]);
        ///}
        ///
        ///__kernel void ndarr_arcsin_float(global float *x, global float *r)
        ///{
        ///	const int i = get_global_id(0);
        ///
        ///	r[i] = asin(x[i]) [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Trignometry {
            get {
                return ResourceManager.GetString("Trignometry", resourceCulture);
            }
        }
    }
}
